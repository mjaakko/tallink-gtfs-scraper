name: Build Docker image

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.docker-digest.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Build Docker image with Jib
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jib -Djib.to.auth.username=${{ secrets.DOCKERHUB_USERNAME }} -Djib.to.auth.password=${{ secrets.DOCKERHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Export Docker digest
        id: docker-digest
        run: |
          echo "digest=$(cat build/jib-image.digest)" >> "$GITHUB_OUTPUT"
          echo "Docker image digest: $(cat build/jib-image.digest)" >> "$GITHUB_STEP_SUMMARY"
  tag:
    name: Add tags to release image
    runs-on: ubuntu-latest
    needs: build
    # Run only for tagged commits
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    env:
      DOCKER_IMAGE: mjaakko/tallink-gtfs-scraper
    steps:
      #TODO: add step for validating tag
      - name: Create Docker tags from Git tag
        id: tags
        run: |
         TAG=${{ github.ref_name }}
         echo "VERSION_PATCH=${TAG}" >> "$GITHUB_OUTPUT"
         echo "VERSION_MINOR=${TAG%.*}" >> "$GITHUB_OUTPUT"
         echo "VERSION_MAJOR=${TAG%.*.*}" >> "$GITHUB_OUTPUT"
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Add tags to Docker image and push to Docker Hub
        run: |
          docker pull $DOCKER_IMAGE@${{ needs.build.outputs.digest }}
          docker tag $DOCKER_IMAGE@${{ needs.build.outputs.digest }} $DOCKER_IMAGE:${{ steps.tags.outputs.VERSION_PATCH }}
          docker tag $DOCKER_IMAGE@${{ needs.build.outputs.digest }} $DOCKER_IMAGE:${{ steps.tags.outputs.VERSION_MINOR }}
          docker tag $DOCKER_IMAGE@${{ needs.build.outputs.digest }} $DOCKER_IMAGE:${{ steps.tags.outputs.VERSION_MAJOR }}
          docker tag $DOCKER_IMAGE@${{ needs.build.outputs.digest }} $DOCKER_IMAGE:latest
          docker push --all-tags $DOCKER_IMAGE